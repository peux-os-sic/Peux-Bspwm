#!/usr/bin/env bash

# This script is not my original work and only some of it is modified to work better and to look better.
# The link to the gist is below:
# https://gist.githubusercontent.com/Blaradox/030f06d165a82583ae817ee954438f2e/raw/cd375e1f11f7aa23f9b23d3554d12f2d2c0b57db/volumeControl.sh

# You can call this script like this:
# $ ./volumeControl.sh up
# $ ./volumeControl.sh down
# $ ./volumeControl.sh mute

# Script modified from these wonderful people:
# https://github.com/dastorm/volume-notification-dunst/blob/master/volume.sh
# https://gist.github.com/sebastiencs/5d7227f388d93374cebdf72e783fbd6a


# First balance both channels
#amixer set Master 100%,100%

function get_volume {
  amixer get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1
}

function is_mute {
  amixer get Master | grep '%' | grep -oE '[^ ]+$' | grep off > /dev/null
}

function send_notification {
  iconVolumeUp="/usr/share/pixmaps/volume-up.png"
  iconVolumeDown="/usr/share/pixmaps/volume-down.png"
  iconMuted="/usr/share/pixmaps/no-sound.png"
  iconPaused="/usr/share/pixmaps/pause.png"
  iconNext="/usr/share/pixmaps/next.png"
  iconPrevious="/usr/share/pixmaps/previous.png"
  if is_mute ; then
    dunstify -i $iconMuted -r 2593 -u normal "mute"
  else
    volume=$(get_volume)
    # Make the bar with the special character ─ (it's not dash -)
    # https://en.wikipedia.org/wiki/Box-drawing_character
    bar=$(seq --separator="─" 0 "$((volume / 5))" | sed 's/[0-9]//g')
    percentage=$(amixer -D pulse get Master | awk -F 'Left:|[][]' 'BEGIN {RS=""}{ print $3 }')   

    # the below portion is separately called within each of the cases
    # uncomment the command below if you want to use only one instance of dunstify for both vol-up and vol-down
    # Send the notification
    #dunstify -i $iconVolumeUp -r 2593 -u normal "Current Volume: $percentage " "$bar"
  fi
}

case $1 in
  up)
    # set the volume on (if it was muted)
    amixer -D pulse set Master on > /dev/null
    # up the volume (+ 5%)
    amixer -D pulse sset Master 5%+ > /dev/null

    # when you call the function, the variables would also be available withint this scope
    send_notification
    dunstify -i $iconVolumeUp -r 2593 -u normal "Current Volume: $percentage " "$bar"

    ;;
  down)
    amixer -D pulse set Master on > /dev/null
    amixer -D pulse sset Master 5%- > /dev/null

    # when you call the function, the variables would also be available within this scope
    send_notification
    dunstify -i $iconVolumeDown -r 2593 -u normal "Current Volume: $percentage " "$bar" 
    
    ;;
  mute)
    # toggle mute
    amixer -D pulse set Master 1+ toggle > /dev/null
    send_notification
    ;;
  pause)
    # pause media
    playerctl play-pause
    send_notification
    dunstify -i $iconPaused -r 2593 -u normal "Play/Pause"
    ;;
  next)
    # pause media
    playerctl next
    send_notification
    dunstify -i $iconNext -r 2593 -u normal "Playing"
    ;;

  previous)
    # pause media
    playerctl previous
    send_notification
    dunstify -i $iconPrevious -r 2593 -u normal "Playing"
    ;;
esac
